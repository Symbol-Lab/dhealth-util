/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tutorial.BasicHealth', null, global);
goog.exportSymbol('proto.tutorial.BasicHealth.Ethnicity', null, global);
goog.exportSymbol('proto.tutorial.BasicHealth.Gender', null, global);
goog.exportSymbol('proto.tutorial.BasicHealth.PhysicalActivityLevel', null, global);
goog.exportSymbol('proto.tutorial.BasicHealth.SmokerStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tutorial.BasicHealth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tutorial.BasicHealth.repeatedFields_, null);
};
goog.inherits(proto.tutorial.BasicHealth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tutorial.BasicHealth.displayName = 'proto.tutorial.BasicHealth';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tutorial.BasicHealth.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tutorial.BasicHealth.prototype.toObject = function(opt_includeInstance) {
  return proto.tutorial.BasicHealth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tutorial.BasicHealth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tutorial.BasicHealth.toObject = function(includeInstance, msg) {
  var f, obj = {
    gender: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dateOfBirthMillis: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    heightCm: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    weightKg: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    deprecatedEthnicityList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    geographicRegion: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    physicalActivityLevel: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    smokerStatus: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tutorial.BasicHealth}
 */
proto.tutorial.BasicHealth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tutorial.BasicHealth;
  return proto.tutorial.BasicHealth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tutorial.BasicHealth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tutorial.BasicHealth}
 */
proto.tutorial.BasicHealth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tutorial.BasicHealth.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateOfBirthMillis(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeightCm(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightKg(value);
      break;
    case 5:
      var value = /** @type {!proto.tutorial.BasicHealth.Ethnicity} */ (reader.readEnum());
      msg.addDeprecatedEthnicity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeographicRegion(value);
      break;
    case 7:
      var value = /** @type {!proto.tutorial.BasicHealth.PhysicalActivityLevel} */ (reader.readEnum());
      msg.setPhysicalActivityLevel(value);
      break;
    case 8:
      var value = /** @type {!proto.tutorial.BasicHealth.SmokerStatus} */ (reader.readEnum());
      msg.setSmokerStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tutorial.BasicHealth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tutorial.BasicHealth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tutorial.BasicHealth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tutorial.BasicHealth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.tutorial.BasicHealth.Gender} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getDeprecatedEthnicityList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.tutorial.BasicHealth.PhysicalActivityLevel} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {!proto.tutorial.BasicHealth.SmokerStatus} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.tutorial.BasicHealth.Gender = {
  GENDER_NIL: 0,
  GENDER_FEMALE: 1,
  GENDER_MALE: 2,
  GENDER_OTHER: 3
};

/**
 * @enum {number}
 */
proto.tutorial.BasicHealth.Ethnicity = {
  ETHNICITY_NIL: 0,
  ETHNICITY_WHITE: 1,
  ETHNICITY_BLACK: 2,
  ETHNICITY_AMERICAN_INDIAN_ALASKA_NATIVE: 3,
  ETHNICITY_ASIAN_INDIAN: 4,
  ETHNICITY_CHINESE: 5,
  ETHNICITY_FILIPINO: 6,
  ETHNICITY_JAPANESE: 7,
  ETHNICITY_KOREAN: 8,
  ETHNICITY_VIETNAMESE: 9,
  ETHNICITY_OTHER_ASIAN: 10,
  ETHNICITY_NATIVE_HAWAIIAN: 11,
  ETHNICITY_GUAMANIAN_CHAMORRO: 12,
  ETHNICITY_SAMOAN: 13,
  ETHNICITY_OTHER_PACIFIC_ISLANDER: 14,
  ETHNICITY_UNSPECIFIED: 99
};

/**
 * @enum {number}
 */
proto.tutorial.BasicHealth.PhysicalActivityLevel = {
  PHYSICAL_ACTIVITY_NIL: 0,
  PHYSICAL_ACTIVITY_LOW: 1,
  PHYSICAL_ACTIVITY_OCCASIONAL_LIGHT: 2,
  PHYSICAL_ACTIVITY_REGULAR: 3,
  PHYSICAL_ACTIVITY_HIGH: 4
};

/**
 * @enum {number}
 */
proto.tutorial.BasicHealth.SmokerStatus = {
  SMOKER_STATUS_NIL: 0,
  SMOKER_STATUS_NONSMOKER: 1,
  SMOKER_STATUS_OCCASIONAL: 2,
  SMOKER_STATUS_REGULAR: 3,
  SMOKER_STATUS_HEAVY: 4
};

/**
 * required Gender gender = 1;
 * @return {!proto.tutorial.BasicHealth.Gender}
 */
proto.tutorial.BasicHealth.prototype.getGender = function() {
  return /** @type {!proto.tutorial.BasicHealth.Gender} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tutorial.BasicHealth.Gender} value */
proto.tutorial.BasicHealth.prototype.setGender = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearGender = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasGender = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 date_of_birth_millis = 2;
 * @return {number}
 */
proto.tutorial.BasicHealth.prototype.getDateOfBirthMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tutorial.BasicHealth.prototype.setDateOfBirthMillis = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearDateOfBirthMillis = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasDateOfBirthMillis = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double height_cm = 3;
 * @return {number}
 */
proto.tutorial.BasicHealth.prototype.getHeightCm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.tutorial.BasicHealth.prototype.setHeightCm = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearHeightCm = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasHeightCm = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double weight_kg = 4;
 * @return {number}
 */
proto.tutorial.BasicHealth.prototype.getWeightKg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.tutorial.BasicHealth.prototype.setWeightKg = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearWeightKg = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasWeightKg = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Ethnicity deprecated_ethnicity = 5;
 * @return {!Array<!proto.tutorial.BasicHealth.Ethnicity>}
 */
proto.tutorial.BasicHealth.prototype.getDeprecatedEthnicityList = function() {
  return /** @type {!Array<!proto.tutorial.BasicHealth.Ethnicity>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<!proto.tutorial.BasicHealth.Ethnicity>} value */
proto.tutorial.BasicHealth.prototype.setDeprecatedEthnicityList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.tutorial.BasicHealth.Ethnicity} value
 * @param {number=} opt_index
 */
proto.tutorial.BasicHealth.prototype.addDeprecatedEthnicity = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tutorial.BasicHealth.prototype.clearDeprecatedEthnicityList = function() {
  this.setDeprecatedEthnicityList([]);
};


/**
 * optional string geographic_region = 6;
 * @return {string}
 */
proto.tutorial.BasicHealth.prototype.getGeographicRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tutorial.BasicHealth.prototype.setGeographicRegion = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearGeographicRegion = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasGeographicRegion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PhysicalActivityLevel physical_activity_level = 7;
 * @return {!proto.tutorial.BasicHealth.PhysicalActivityLevel}
 */
proto.tutorial.BasicHealth.prototype.getPhysicalActivityLevel = function() {
  return /** @type {!proto.tutorial.BasicHealth.PhysicalActivityLevel} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.tutorial.BasicHealth.PhysicalActivityLevel} value */
proto.tutorial.BasicHealth.prototype.setPhysicalActivityLevel = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearPhysicalActivityLevel = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasPhysicalActivityLevel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SmokerStatus smoker_status = 8;
 * @return {!proto.tutorial.BasicHealth.SmokerStatus}
 */
proto.tutorial.BasicHealth.prototype.getSmokerStatus = function() {
  return /** @type {!proto.tutorial.BasicHealth.SmokerStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.tutorial.BasicHealth.SmokerStatus} value */
proto.tutorial.BasicHealth.prototype.setSmokerStatus = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.tutorial.BasicHealth.prototype.clearSmokerStatus = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tutorial.BasicHealth.prototype.hasSmokerStatus = function() {
  return jspb.Message.getField(this, 8) != null;
};


goog.object.extend(exports, proto.tutorial);
