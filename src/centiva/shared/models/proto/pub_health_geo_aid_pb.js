/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.health.centiva.api.GeoCheckinsRequest', null, global);
goog.exportSymbol('proto.health.centiva.api.GeoCheckinsRequest.CheckIn', null, global);
goog.exportSymbol('proto.health.centiva.api.GeoCheckinsResponse', null, global);
goog.exportSymbol('proto.health.centiva.api.GeoGetCheckinsRequest', null, global);
goog.exportSymbol('proto.health.centiva.api.GeoGetCheckinsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.health.centiva.api.GeoCheckinsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.health.centiva.api.GeoCheckinsRequest.repeatedFields_, null);
};
goog.inherits(proto.health.centiva.api.GeoCheckinsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.health.centiva.api.GeoCheckinsRequest.displayName = 'proto.health.centiva.api.GeoCheckinsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.health.centiva.api.GeoCheckinsRequest.CheckIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.health.centiva.api.GeoCheckinsRequest.CheckIn.displayName = 'proto.health.centiva.api.GeoCheckinsRequest.CheckIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.health.centiva.api.GeoCheckinsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.health.centiva.api.GeoCheckinsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.health.centiva.api.GeoCheckinsResponse.displayName = 'proto.health.centiva.api.GeoCheckinsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.health.centiva.api.GeoGetCheckinsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.health.centiva.api.GeoGetCheckinsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.health.centiva.api.GeoGetCheckinsRequest.displayName = 'proto.health.centiva.api.GeoGetCheckinsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.health.centiva.api.GeoGetCheckinsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.health.centiva.api.GeoGetCheckinsResponse.repeatedFields_, null);
};
goog.inherits(proto.health.centiva.api.GeoGetCheckinsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.health.centiva.api.GeoGetCheckinsResponse.displayName = 'proto.health.centiva.api.GeoGetCheckinsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.health.centiva.api.GeoCheckinsRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.health.centiva.api.GeoCheckinsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.health.centiva.api.GeoCheckinsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    authToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signature: jspb.Message.getFieldWithDefault(msg, 3, ""),
    verificationCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    checkInsList: jspb.Message.toObjectList(msg.getCheckInsList(),
    proto.health.centiva.api.GeoCheckinsRequest.CheckIn.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.health.centiva.api.GeoCheckinsRequest}
 */
proto.health.centiva.api.GeoCheckinsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.health.centiva.api.GeoCheckinsRequest;
  return proto.health.centiva.api.GeoCheckinsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.health.centiva.api.GeoCheckinsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.health.centiva.api.GeoCheckinsRequest}
 */
proto.health.centiva.api.GeoCheckinsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPubKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerificationCode(value);
      break;
    case 5:
      var value = new proto.health.centiva.api.GeoCheckinsRequest.CheckIn;
      reader.readMessage(value,proto.health.centiva.api.GeoCheckinsRequest.CheckIn.deserializeBinaryFromReader);
      msg.addCheckIns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.health.centiva.api.GeoCheckinsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.health.centiva.api.GeoCheckinsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVerificationCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCheckInsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.health.centiva.api.GeoCheckinsRequest.CheckIn.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.toObject = function(opt_includeInstance) {
  return proto.health.centiva.api.GeoCheckinsRequest.CheckIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    poiid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    point: jspb.Message.getFieldWithDefault(msg, 3, ""),
    area: jspb.Message.getFieldWithDefault(msg, 4, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isVerified: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.health.centiva.api.GeoCheckinsRequest.CheckIn;
  return proto.health.centiva.api.GeoCheckinsRequest.CheckIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoiid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVerified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.health.centiva.api.GeoCheckinsRequest.CheckIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPoiid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArea();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getIsVerified();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string poiId = 2;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getPoiid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setPoiid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string point = 3;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getPoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setPoint = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string area = 4;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setArea = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 startTime = 5;
 * @return {number}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setStarttime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 endTime = 6;
 * @return {number}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setEndtime = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool is_verified = 7;
 * @return {boolean}
 */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.getIsVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.health.centiva.api.GeoCheckinsRequest.CheckIn.prototype.setIsVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string pub_key = 1;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.getPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.prototype.setPubKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string auth_token = 2;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.getAuthToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.prototype.setAuthToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string signature = 3;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.prototype.setSignature = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string verification_code = 4;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.getVerificationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsRequest.prototype.setVerificationCode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated CheckIn check_ins = 5;
 * @return {!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.getCheckInsList = function() {
  return /** @type{!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.health.centiva.api.GeoCheckinsRequest.CheckIn, 5));
};


/** @param {!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>} value */
proto.health.centiva.api.GeoCheckinsRequest.prototype.setCheckInsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn=} opt_value
 * @param {number=} opt_index
 * @return {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn}
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.addCheckIns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.health.centiva.api.GeoCheckinsRequest.CheckIn, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.health.centiva.api.GeoCheckinsRequest.prototype.clearCheckInsList = function() {
  this.setCheckInsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.health.centiva.api.GeoCheckinsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.health.centiva.api.GeoCheckinsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.health.centiva.api.GeoCheckinsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.health.centiva.api.GeoCheckinsResponse}
 */
proto.health.centiva.api.GeoCheckinsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.health.centiva.api.GeoCheckinsResponse;
  return proto.health.centiva.api.GeoCheckinsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.health.centiva.api.GeoCheckinsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.health.centiva.api.GeoCheckinsResponse}
 */
proto.health.centiva.api.GeoCheckinsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.health.centiva.api.GeoCheckinsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.health.centiva.api.GeoCheckinsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.health.centiva.api.GeoCheckinsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoCheckinsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.health.centiva.api.GeoCheckinsResponse.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.health.centiva.api.GeoCheckinsResponse.prototype.setOk = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.health.centiva.api.GeoCheckinsResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoCheckinsResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.health.centiva.api.GeoGetCheckinsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.health.centiva.api.GeoGetCheckinsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoGetCheckinsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    authToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signature: jspb.Message.getFieldWithDefault(msg, 3, ""),
    area: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.health.centiva.api.GeoGetCheckinsRequest}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.health.centiva.api.GeoGetCheckinsRequest;
  return proto.health.centiva.api.GeoGetCheckinsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.health.centiva.api.GeoGetCheckinsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.health.centiva.api.GeoGetCheckinsRequest}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPubKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.health.centiva.api.GeoGetCheckinsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.health.centiva.api.GeoGetCheckinsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoGetCheckinsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArea();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string pub_key = 1;
 * @return {string}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.getPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.setPubKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string auth_token = 2;
 * @return {string}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.getAuthToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.setAuthToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string signature = 3;
 * @return {string}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.setSignature = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string area = 4;
 * @return {string}
 */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoGetCheckinsRequest.prototype.setArea = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.health.centiva.api.GeoGetCheckinsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.health.centiva.api.GeoGetCheckinsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.health.centiva.api.GeoGetCheckinsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoGetCheckinsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.health.centiva.api.GeoCheckinsRequest.CheckIn.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.health.centiva.api.GeoGetCheckinsResponse}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.health.centiva.api.GeoGetCheckinsResponse;
  return proto.health.centiva.api.GeoGetCheckinsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.health.centiva.api.GeoGetCheckinsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.health.centiva.api.GeoGetCheckinsResponse}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = new proto.health.centiva.api.GeoCheckinsRequest.CheckIn;
      reader.readMessage(value,proto.health.centiva.api.GeoCheckinsRequest.CheckIn.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.health.centiva.api.GeoGetCheckinsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.health.centiva.api.GeoGetCheckinsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.health.centiva.api.GeoGetCheckinsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.health.centiva.api.GeoCheckinsRequest.CheckIn.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.setOk = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated GeoCheckinsRequest.CheckIn data = 3;
 * @return {!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.health.centiva.api.GeoCheckinsRequest.CheckIn, 3));
};


/** @param {!Array<!proto.health.centiva.api.GeoCheckinsRequest.CheckIn>} value */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn=} opt_value
 * @param {number=} opt_index
 * @return {!proto.health.centiva.api.GeoCheckinsRequest.CheckIn}
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.health.centiva.api.GeoCheckinsRequest.CheckIn, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.health.centiva.api.GeoGetCheckinsResponse.prototype.clearDataList = function() {
  this.setDataList([]);
};


goog.object.extend(exports, proto.health.centiva.api);
